input {
    syslog{
        port => 1514
        use_labels => true
        id => "srlinux"
        tags => [ "syslog", "srlinux" ]
    }
}

filter {
    if "srlinux" in [tags] {
        grok {
            patterns_dir => [ "/var/lib/logstash/patterns" ]
            match => { "message" => "%{SRLPROC:srlproc}\|%{SRLPID:srlpid}\|%{SRLTHR:srlthread}\|%{SRLSEQ:srlsequence}(?<message>(.*))" }
            overwrite => [ "message" ]
            add_field => { "host.ip" => "%{host}" }
            add_field => { "host.name" => "%{logsource}" }
        }

        grok {
            patterns_dir => [ "/var/lib/logstash/patterns" ]
            match => { "message" => [
                "\|%{SRLLVL:garbage1}: %{SRLGRBG:garbage2}etwork-instance %{SRLNETINST:srlnetinst}(?<message>(.*))",
                "\|%{SRLLVL:garbage1}: (?<message>(.*))"
                ] }
            overwrite => [ "message" ]
            remove_field => [ "@version", "host", "logsource", "garbage1", "garbage2" ]
        }
        
        date {
            match => [ "timestamp",
            "MMM  d YYYY HH:mm:ss.SSS",
            "MMM d YYYY HH:mm:ss.SSS",
            "MMM dd YYYY HH:mm:ss.SSS",
            "MMM  d HH:mm:ss.SSS",
            "MMM dd HH:mm:ss",
            "MMM  d HH:mm:ss",
            "YYYY MMM dd HH:mm:ss.SSS ZZZ",
            "YYYY MMM dd HH:mm:ss ZZZ",
            "YYYY MMM dd HH:mm:ss.SSS",
            "ISO8601"
            ]
            timezone => "Europe/Rome"
        }

    }
}

output {
    if "srlinux" in [tags] {
        if "_grokparsefailure" in [tags] {
            file {
                path => "/logs/fail_to_parse_srl.log"
                codec => rubydebug
            }
        } else {
            elasticsearch {
                        hosts => ["http://es01"]
                        ssl => false
                        manage_template => false
                        index           => "fabric-logs-%{+YYYY.MM.dd}"
                        id => "fabric-logs"
            }
        }
    }
    
}